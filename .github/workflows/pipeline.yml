name: NinjaOne Playwright Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      npm_config_cache: ${{ github.workspace }}/.npm-store
      npm_version: 9.5.0
      node_version: 20.x
      URL: ${{ secrets.URL }}
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      INVALID_USERNAME: ${{ secrets.INVALID_USERNAME }}
      SECRET: ${{ secrets.SECRET }}
      CI: "true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ${{ env.npm_config_cache }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup npm
        run: |
          corepack enable
          corepack prepare npm@${{ env.npm_version }} --activate
        env:
          npm_version: ${{ env.npm_version }}

      - name: Install test dependencies
        run: npm install --frozen-lockfile

      - name: Install browser dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libwoff1 libwoff2-1 libvpx7 libopus0 libevent-2.1-7 libgstallocators-1.0-0 \
            libgstapp-1.0-0 libgstpbutils-1.0-0 libgstaudio-1.0-0 libgstgl-1.0-0 \
            libgsttag-1.0-0 libgstvideo-1.0-0 libgstcodecparsers-1.0-0 libgstfft-1.0-0 \
            libflite1 libflite-usenglish1 libflite-cmu-grapheme-lang1 \
            libflite-cmu-grapheme-lex1 libflite-cmu-indic-lang1 libflite-cmu-indic-lex1 \
            libflite-cmulex1 libflite-cmu-time-awb1 libflite-cmu-us-awb1 libflite-cmu-us-kal16-1 \
            libflite-cmu-us-kal1 libflite-cmu-us-rms1 libflite-cmu-us-slt1 libavif13 \
            libharfbuzz-icu0 libhyphen0 libmanette-0.2-0 libgles2-mesa libx264-160 \
            fonts-liberation libfontconfig1 libnss3 libxrandr2 libasound2 \
            libatk-bridge2.0-0 libatk1.0-0 libdrm2 libdbus-1-3 libxcomposite1 libxdamage1

      - name: Install Playwright Browsers
        run: npx playwright install

      - name: Run Playwright Tests
        run: |
          mkdir -p junit-test-results
          npx cucumber-js --format json:test-results.json --require-module ts-node/register
          if [ -f "test-results.json" ]; then
            npx cucumber-junit < test-results.json > junit-test-results/e2e-junit-results.xml
            chmod 755 junit-test-results/e2e-junit-results.xml
            echo "JUnit report file has been created."
          else
              echo "Cucumber JSON report file does not exist."
              exit 1
          fi

          if [ -f "$report_file_path" ]; then
            chmod 755 "$report_file_path"
            echo "Report file has been created."
          else
            echo "JUnit report file does not exist."
            exit 1
          fi
        env:
          BASE_URL: ${{ secrets.URL }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          INVALID_USERNAME: ${{ secrets.INVALID_USERNAME }}
          SECRET: ${{ secrets.SECRET }}
          CI: "true"
        continue-on-error: true

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: junit-test-results
          path: junit-test-results/e2e-junit-results.xml

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: test/playwright-report

      - name: Upload Playwright JSON Results
        uses: actions/upload-artifact@v3
        with:
          name: playwright-json-results
          path: test/test-results
