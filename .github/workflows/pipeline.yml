name: NinjaOne Playwright Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      npm_config_cache: ${{ github.workspace }}/.npm-store
      npm_version: 9.5.0
      node_version: 20.x
      URL: ${{ secrets.URL }}
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      CI: "true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ${{ env.npm_config_cache }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup npm
        run: |
          corepack enable
          corepack prepare npm@${{ env.npm_version }} --activate
        env:
          npm_version: ${{ env.npm_version }}

      - name: Install test dependencies
        run: npm install --frozen-lockfile

      - name: Run Playwright Tests
        run: |
          mkdir -p junit-test-results
          report_file_path="junit-test-results/e2e-junit-results.xml"

          PLAYWRIGHT_JUNIT_OUTPUT_FILE=$report_file_path npx playwright test \
            --reporter=junit \
            --timeout=120000 \
            --trace on

          if [ -f "$report_file_path" ]; then
            chmod 755 "$report_file_path"
            echo "Report file has been created."
          else
            echo "JUnit report file does not exist."
            exit 1
          fi
        env:
          BASE_URL: ${{ secrets.URL }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          CI: "true"
        continue-on-error: true

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: junit-test-results
          path: junit-test-results/e2e-junit-results.xml

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: test/playwright-report

      - name: Upload Playwright JSON Results
        uses: actions/upload-artifact@v3
        with:
          name: playwright-json-results
          path: test/test-results
